JUnit version 4.12
.................................................
Testing getISBN() method with null ISBN...
ISBN: null
.................................................
Testing isAvailable() method after borrowing...
Is Available: false
.................................................
Testing getTitle() method...
Title: To Kill a Mockingbird
.................................................
Testing borrowBook() and returnBook() methods...
Initial Availability: true
Availability after borrowing: false
Availability after returning: true
.................................................
Testing getAuthor() method with empty author...
Author: 
.................................................
Testing getTitle() method with null title...
Title: null
.................................................
Testing Book constructor with empty title...
Title: 
Author: J.K. Rowling
ISBN: 9780545010221
Is Available: true
.................................................
Testing getISBN() method...
ISBN: 9780061120084
.................................................
Testing getISBN() method with empty ISBN...
ISBN: 
.................................................
Testing isAvailable() method...
Is Available: true
.................................................
Testing getTitle() method with empty title...
Title: 
.................................................
Testing getAuthor() method with null author...
Author: null
.................................................
Testing Book constructor with valid input...
Title: To Kill a Mockingbird
Author: Harper Lee
ISBN: 9780061120084
Is Available: true
.................................................
Testing returnBook() method...
Initial Availability: false
Availability after returning: true
..................................................
Testing borrowBook() method...
Initial Availability: true
Availability after borrowing: false
.................................................
Testing isAvailable() method after returning...
Is Available: true
.................................................
Testing getAuthor() method...
Author: Harper Lee
.................................................
Testing Book constructor with null author...
Title: Harry Potter and the Philosopher's Stone
Author: null
ISBN: 9780747532743
Is Available: true
.................................................
Testing findBooksByTitle() method when title exists...
Searching for title: To Kill a Mockingbird
Found 2 books with the title: To Kill a Mockingbird
.................................................
Testing findBookByISBN() method with an empty catalog...
Searching for book with ISBN: 9780061120084
.................................................
Testing findBooksByTitle() method when title does not exist...
Searching for title: Harry Potter
Found 0 books with the title: Harry Potter
.................................................
Testing findBooksByAuthor() method when author exists...
Searching for author: Harper Lee
Found 1 books by author: Harper Lee
.................................................
Testing addBook() method when book already exists...
Initial books count: 1
Book with ISBN 9780061120084 already exists.
Books count after adding: 1
.................................................
Testing removeBook() method when book exists...
Initial books count: 1
Books count after removal: 0
.................................................
Testing findBookByISBN() method when the book does not exist...
Searching for book with ISBN: 9780545010221
.................................................
Testing findBookByISBN() method when the book exists...
Searching for book with ISBN: 9780061120084
.................................................
Testing findBooksByAuthor() method with an empty catalog...
Searching for author: J.R.R. Tolkien
Found 0 books by author: J.R.R. Tolkien
.................................................
Testing getAvailableBooks() method when no books are available...
Found 0 available books in the catalog
.................................................
Testing removeBook() method when book does not exist...
Initial books count: 0
Books count after removal: 0
.................................................
Testing findBooksByTitle() method with an empty catalog...
Searching for title: To Kill a Mockingbird
Found 0 books with the title: To Kill a Mockingbird
.................................................
Testing addBook() method with different ISBN...
Initial books count: 1
Books count after adding: 2
.................................................
Testing removeBook() method from an empty catalog...
Initial books count: 0
Books count after removal: 0
.................................................
Testing findBooksByAuthor() method when author does not exist...
Searching for author: J.K. Rowling
Found 0 books by author: J.K. Rowling
.................................................
Testing addBook() method when book does not exist...
Initial books count: 0
Books count after adding: 1
.................................................
Testing getAvailableBooks() method when some books are available...
Found 1 available books in the catalog
.................................................
Testing getAvailableBooks() method when all books are available...
Found 2 available books in the catalog
.Fee of $10.0 added for 001. Total outstanding fees: $10.0
................................................
Testing hasOutstandingFees() method when member has fees...
.Fee of $10.0 added for 001. Total outstanding fees: $10.0
................................................
Testing addFee() method for a member with existing fees...
Fee of $5.0 added for 001. Total outstanding fees: $15.0
.Fee of $10.0 added for 001. Total outstanding fees: $10.0
................................................
Testing getOutstandingFees() method when member has fees...
.................................................
Testing hasOutstandingFees() method for a non-existing member...
.................................................
Testing addFee() method with negative amount...
.................................................
Testing calculateFee() method with negative days overdue...
.................................................
Testing calculateFee() method with zero days overdue...
.................................................
Testing calculateFee() method with positive days overdue...
.................................................
Testing hasOutstandingFees() method when member has no fees...
.................................................
Testing addFee() method for a member with no existing fees...
Fee of $10.0 added for 002. Total outstanding fees: $10.0
.................................................
Testing getOutstandingFees() method for a non-existing member...
.................................................
Testing clearMemberFees() method when member has no fees...
.................................................
Testing getOutstandingFees() method when member has no fees...
.Fee of $10.0 added for 001. Total outstanding fees: $10.0
................................................
Testing clearMemberFees() method when member has fees...
All fees cleared for 001
.Fee of $15.0 added for 002. Total outstanding fees: $15.0
................................................
Testing payFees() method when amount is less than outstanding fees...
Payment recorded for 002. Outstanding fees: $5.0
.Fee of $10.0 added for 001. Total outstanding fees: $10.0
................................................
Testing payFees() method when amount covers all fees...
All fees cleared for 001
.Fee of $5.0 added for 003. Total outstanding fees: $5.0
................................................
Testing payFees() method when amount is greater than outstanding fees...
All fees cleared for 003
.................................................
Testing clearMemberFees() method for a non-existing member...
.Book is not available for checkout.
.Book checked out to 12345. Due date: 2024-04-13
This book was not loaned to this member.
...This book was not loaned to this member.
..Book checked out to 12345. Due date: 2024-04-13
.Book checked out to 12345. Due date: 2024-04-13
Book returned successfully.
.Book checked out to member123. Due date: 2024-04-13
.Book is not available for checkout.
..Exception occurred while checking book availability: Cannot invoke "Catalog.getAvailableBooks()" because "this.catalog" is null
.Exception occurred while checking book availability: Cannot invoke "Catalog.getAvailableBooks()" because "this.catalog" is null
.Book checked out to 12345. Due date: 2024-04-13
...Test Passed: getName() returns empty name
.Test Passed: getID() returns empty ID
..Test Passed: getName() returns null name
.Test Passed: getID() returns member's ID
.Test Passed: Member constructor with empty name and ID
.Test Passed: getBorrowedBooks() returns empty list when no books are borrowed
.Test Passed: Member constructor with null name and ID
.Test Passed: getName() returns member's name
.Alice Johnson has borrowed the book: Title1
Alice Johnson has borrowed the book: Title2
Alice Johnson has returned the book: Title1
Test Passed: getBorrowedBooks() returns updated list of borrowed books after returning a book
.Test Passed: getID() returns null ID
.Alice Johnson has borrowed the book: Title1
Alice Johnson has borrowed the book: Title2
Test Passed: borrowBook() adds multiple books to borrowed list
.Test Passed: Member constructor with name and ID
.John Doe has borrowed the book: Title
Test Passed: borrowBook() adds book to borrowed list when available
.Jane Smith has borrowed the book: Title1
Jane Smith has borrowed the book: Title2
Test Passed: getBorrowedBooks() returns list of borrowed books
.Book is not available for borrowing.
Test Passed: borrowBook() does not add book to borrowed list when not available
.Member added: John Doe with ID 001
Member already exists in the library.
Test Passed: Duplicate member not added
.Member added: John Doe with ID 001
Member added: Jane Smith with ID 002
Member with ID 001 removed from the library.
Test Passed: All members listed after removing some members
.Member added: John Doe with ID 001
Member with ID 001 removed from the library.
Test Passed: Existing member removed successfully
.Test Passed: Members not found by name in empty list
.Member added: John Doe with ID 001
Test Passed: Existing member found by ID
..Member added: John Doe with ID 001
Member added: Jane Smith with ID 002
Test Passed: All existing members listed
.Member added: John Doe with ID 001
Member with ID 002 not found in the library.
Test Passed: Non-existing member not removed
..Test Passed: Member not found in empty list
.Member added: John Doe with ID 001
Test Passed: Non-existing member not found by ID
.Member added: John Doe with ID 001
Member added: John Doe with ID 002
Member added: Jane Smith with ID 003
Test Passed: Existing members found by name
.Member added: John Doe with ID 001
Test Passed: Member added successfully
.Member added: John Doe with ID 001
Member added: Jane Smith with ID 002
Test Passed: Multiple members added successfully
..Test Passed: No members listed in an empty manager
.Member added: John Doe with ID 001
Test Passed: Non-existing members not found by name
.Member added: John Doe with ID 001
Member added: Jane Smith with ID 002
Member with ID 001 removed from the library.
Test Passed: Multiple members removed successfully
.Alice has been registered for notifications.
..................................................................
Time: 0.049

OK (172 tests)

